#!/bin/bash
#
#Assumes you have libusb-1.0.8.tar.bz2 and XPlane SDK in the parent directory.
#
cd ..
BASE=`pwd`
PREFIX=${BASE}/ltr
LIB_DIR=ltr_gui.app/Contents/Frameworks
BIN_DIR=ltr_gui.app/Contents/MacOS
HELPER_DIR=ltr_gui.app/Contents/helper
WII_SRVR_DIR=
export MACOSX_DEPLOYMENT_TARGET=10.4

OS_NUM=$(sw_vers -productVersion | sed -E 's/\.[0-9]+$//')
if test x${OS_NUM} = x10.6; then
  export CC=gcc-4.0
  export CXX=g++-4.0
  export CPP=cpp-4.0
  export OBJC=gcc-4.0
fi;
##Build libusb-1.0
if [ -f ${PREFIX}/lib/libusb-1.0.dylib ]; then
  echo 'Libusb-1.0 already exists!'
else
  export CFLAGS=" -arch i386 -arch ppc -isysroot /Developer/SDKs/MacOSX10.4u.sdk -mmacosx-version-min=10.4 "
  tar xfj libusb-1.0.8.tar.bz2
  pushd libusb-1.0.8
  ./configure --prefix=${PREFIX} --disable-dependency-tracking >/dev/null
  make >/dev/null
  make install >/dev/null
  unset CFLAGS
  popd
fi

#Build linuxtrack
pushd michal
autoreconf -if
export CFLAGS="-I${PREFIX}/include "
export LDFLAGS="-L${PREFIX}/lib "
if test x${OS_NUM} = x10.6; then
  ./configure --prefix=${PREFIX} --with-xplane-sdk=${BASE}/SDK/CHeaders --enable-snow-leopard >/dev/null
else
  ./configure --prefix=${PREFIX} --with-xplane-sdk=${BASE}/SDK/CHeaders >/dev/null
fi;
make>build.log
make install>install.log

#Build gui - should not be needed anymore
pushd src/qt_gui
#qmake -spec macx-g++
#rm -rf ltr_gui.app
#make install >/dev/null

#Prepare the image
mkdir -p ${LIB_DIR}
mkdir -p ${HELPER_DIR}

cp -R ${PREFIX}/lib/linuxtrack/libltusb1.0.dylib ${LIB_DIR}
cp -R ${PREFIX}/lib/linuxtrack/libtir.0.dylib ${LIB_DIR}
cp -R ${PREFIX}/lib/linuxtrack/libmacwc.0.dylib ${LIB_DIR}
cp -R ${PREFIX}/lib/linuxtrack/libmacwii.0.dylib ${LIB_DIR}
cp -R ${PREFIX}/lib/libusb-1.0.0.dylib ${LIB_DIR}/libusb-1.0.dylib
cp -R ${PREFIX}/lib/liblinuxtrack.0.dylib ${LIB_DIR}/liblinuxtrack.0.dylib
cp -R ${PREFIX}/lib/linuxtrack/libltr.0.dylib ${LIB_DIR}/libltr.0.dylib
cp -R ${PREFIX}/lib/linuxtrack/xlinuxtrack.0.so ${LIB_DIR}/xlinuxtrack.0.dylib
cp -R ${PREFIX}/lib/linuxtrack/xlinuxtrack9.0.so ${LIB_DIR}/xlinuxtrack9.0.dylib
cp -R ${PREFIX}/bin/qt_cam ${HELPER_DIR}
cp -R ${PREFIX}/bin/sg_cam ${HELPER_DIR}

install_name_tool -id @loader_path/libusb-1.0.0.dylib ${LIB_DIR}/libusb-1.0.dylib
install_name_tool -id @loader_path/libltusb1.0.dylib ${LIB_DIR}/libltusb1.0.dylib
install_name_tool -id @executable_path/../Frameworks/libtir.0.dylib ${LIB_DIR}/libtir.0.dylib
install_name_tool -id @executable_path/../Frameworks/libmacwc.0.dylib ${LIB_DIR}/libmacwc.0.dylib
install_name_tool -id @executable_path/../Frameworks/libmacwii.0.dylib ${LIB_DIR}/libmacwii.0.dylib
install_name_tool -id @executable_path/../Frameworks/liblinuxtrack.0.dylib ${LIB_DIR}/liblinuxtrack.0.dylib
install_name_tool -id @executable_path/../Frameworks/libltr.0.dylib ${LIB_DIR}/libltr.0.dylib
install_name_tool -id @executable_path/../Frameworks/xlinuxtrack.0.dylib ${LIB_DIR}/xlinuxtrack.0.dylib
install_name_tool -id @executable_path/../Frameworks/xlinuxtrack9.0.dylib ${LIB_DIR}/xlinuxtrack9.0.dylib

install_name_tool -change "${PREFIX}/lib/libusb-1.0.0.dylib" \
  @loader_path/libusb-1.0.dylib ${LIB_DIR}/libltusb1.0.dylib
install_name_tool -change "${PREFIX}/lib/linuxtrack/libltr.0.dylib" \
  @loader_path/libltr.0.dylib ${LIB_DIR}/libltusb1.0.dylib
install_name_tool -change "${PREFIX}/lib/linuxtrack/libltr.0.dylib"  \
  @loader_path/libltr.0.dylib "${LIB_DIR}/libtir.0.dylib"
install_name_tool -change "${PREFIX}/lib/linuxtrack/libltr.0.dylib"  \
  @loader_path/libltr.0.dylib "${LIB_DIR}/libmacwc.0.dylib"
install_name_tool -change "${PREFIX}/lib/linuxtrack/libltr.0.dylib"  \
  @loader_path/libltr.0.dylib "${LIB_DIR}/libmacwii.0.dylib"

install_name_tool -change "${PREFIX}/lib/linuxtrack/libltr.0.dylib" \
  @executable_path/../Frameworks/libltr.0.dylib ${BIN_DIR}/ltr_gui
install_name_tool -change "${PREFIX}/lib/linuxtrack/libltr.0.dylib" \
  @executable_path/../Frameworks/libltr.0.dylib ${HELPER_DIR}/qt_cam
install_name_tool -change "${PREFIX}/lib/linuxtrack/libltr.0.dylib" \
  @executable_path/../Frameworks/libltr.0.dylib ${HELPER_DIR}/sg_cam

#Create archive image
macdeployqt ltr_gui.app -no-strip
popd

rm -rf dist
mkdir dist
pushd dist
  mkdir -p WiiServer.app/Contents/MacOS
  mkdir -p WiiServer.app/Contents/Frameworks/
  mkdir -p WiiServer.app/Contents/Resources/
  cp -r ../src/mac/English.lproj WiiServer.app/Contents/Resources
  cp ../src/mac/Info.plist WiiServer.app/Contents
  cp ../src/mac/PkgInfo WiiServer.app/Contents
  cp -R ${PREFIX}/bin/WiiServer WiiServer.app/Contents/MacOS
  cp -R ${PREFIX}/lib/linuxtrack/libltr.0.dylib WiiServer.app/Contents/Frameworks/
  install_name_tool -id @executable_path/../Frameworks/libltr.0.dylib \
    WiiServer.app/Contents/Frameworks/libltr.0.dylib
  install_name_tool -change ${PREFIX}/lib/linuxtrack/libltr.0.dylib \
    @executable_path/../Frameworks/libltr.0.dylib WiiServer.app/Contents/MacOS/WiiServer

  mv ../src/qt_gui/ltr_gui.app .
  cp -R ${PREFIX}/bin/ltr_server ${BIN_DIR}
  install_name_tool -change ${PREFIX}/lib/linuxtrack/libltr.0.dylib \
    @executable_path/../Frameworks/libltr.0.dylib ${BIN_DIR}/ltr_server
  if [ -f "${BASE}/bulk_config_data.tar.gz" ]; then
    pushd ltr_gui.app/Contents/Resources/linuxtrack
      tar xfz ${BASE}/bulk_config_data.tar.gz
    popd 
  fi
  mkdir develop
  cp ../src/linuxtrack.h develop
  cp ../src/linuxtrack.c develop
  cp ${PREFIX}/lib/liblinuxtrack.a develop
  cp ../Readme.rtf .
popd
rm -f linuxtrack*.dmg
DMG=linuxtrack$(date +%d%m%y).dmg
hdiutil create ${DMG} -srcfolder dist -format UDZO -volname linuxtrack
ln -s ${DMG} linuxtrack.dmg

popd
#
